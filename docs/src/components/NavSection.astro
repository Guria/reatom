---
import type { MarkdownInstance } from 'astro'

export type Props = {
  section: {
    name: string
    open: boolean
    pages: Array<MarkdownInstance<Record<string, any>>>
  }
}

const { section } = Astro.props
const { name } = section
const id = `nav-${section.name}`
---

<style>
  nav > details > summary::marker {
    content: '▶';
  }
</style>
<nav id={id} aria-label={section.name} class="SideNav border">
  <details open={section.open}>
    <summary class="SideNav-item">{'▶ ' + section.name}</summary>
    {
      section.pages.map((v) => (
        <a href={v.url || '/'} class="SideNav-item" style="border: none;">
          {v.frontmatter.title}
        </a>
      ))
    }
  </details>
</nav>
<script define:vars={{ id, name }}>
  if (location.pathname.startsWith(`/${name}`)) {
    document.querySelector(`#${id} > details`).open = true
  }
</script>
